@model Bonded.Models.ViewModels.DashboardViewModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Raleway:wght@400;600&display=swap" rel="stylesheet">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* General Styling */
        body {
            background-color: linen;/*linear-gradient(to bottom right, #FAEBD7, #F5F5F5); /* Linen Background */ */
            color: #333;
            font-family: 'Raleway', Arial, sans-serif; /* Modern font */
            margin: 0;
            padding: 0;
        }

        footer {
            text-align: center;
            position: relative;
            bottom: 0;
            width: 100%;
        }

        .container {
            max-width: 1200px;
          
            margin: 40px auto;
           /*  padding: 20px; */
        }

        h4 {
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }

        /* Dashboard Styling */
        .dashboard-container {
            display: grid;
            margin-top:80px;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }

        .box {
            background: #fff;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .profile-stats {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .profile-picture {
            width: 90px;
            height: 90px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid #eee;
        }

        .stats h5 {
            margin: 0;
            font-size: 16px;
            font-weight: bold;
            color: #555;
        }

        .stat-box-container {
            display: flex;
            justify-content: space-between;
            width: 100%;
        }

        .stat-box {
            flex: 1; /* Makes both boxes take equal width */
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: lightgray;/* Linen-ish color */
            color: #000; /* Black text */
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-right: 10px; /* Adds space between the boxes */
        }

            .stat-box:last-child {
                margin-right: 0;
            }

            .stat-box span {
                font-size: 20px;
                font-weight: bold;
                background-color: #fff;
                color: #333;
                border-radius: 50%;
                padding: 5px 10px;
            }

        .profile-button {
            margin-top: 10px;
            text-align: center;
            width: 100%;
        }

        .btn-profile {
            padding: 8px 20px;
            border-radius: 8px;
            background: #333; /* Black background */
            color: #fff;
            font-size: 14px;
            font-weight: bold;
            text-decoration: none;
            transition: background 0.3s ease;
        }

            .btn-profile:hover {
                background: #555; /* Darker black */
                text-decoration: none;
                color: #fff;
            }

        /* Pie Chart */
        .pie-chart-container {
            text-align: center;
        }

        canvas {
            max-width: 180px;
            margin: auto;
        }

        /* Notifications */
        .panel {
            max-height: 345px;
            overflow-y: auto;
        }

        .notification-item {
            background: #F5F5F5;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

            .notification-item a {
                font-size: 16px;
                color: #333;
            }

            .notification-item time {
                font-size: 12px;
                color: #777;
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="dashboard-container">
            <!-- Profile + Stats -->
            <div class="box">
                <div class="profile-stats mt-3">
                    <img src="@Model.User.ProfilePicture" alt="Profile Picture" class="profile-picture">
                    <div>
                        <h5 class="fw-bold">@Model.User.UserName</h5>
                        <p>@Model.User.Bio</p>
                        <!-- Stat Box Container -->
                        <div class="stat-box-container">
                            <div class="stat-box">
                                <a style="color:#333" href="@Url.Action("ShowFollower", "Follow", new { userId = @Model.User.Id })" class="btn">
                                    Followers <span class="badge" style="border-radius:30px;font-size:small">@Model.Followers.Count</span>
                                </a>
                            </div>
                            <div class="stat-box">
                                <a style="color:#333" href="@Url.Action("ShowFollowing", "Follow", new { userId = @Model.User.Id })" class="btn">
                                    Following <span class="badge" style="border-radius:30px;font-size:small">@Model.Followings.Count</span>
                                </a>
                            </div>
                        </div>
                        <div class="profile-button" style="display:block">
                            <a href="@Url.Action("DetailedProfile", "User")" style="display:block" class="btn-profile">View Profile</a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Pie Chart -->
            <div class="box pie-chart-container" style="padding-top:60px;">
                <h4 class="fw-bold">Followers vs. Following</h4>
                <canvas id="followerFollowingChart"></canvas>
            </div>

            <!-- Notifications -->
            <div class="box panel">
                <h4>Notifications</h4>
                @if (Model.Notifications.Any())
                {
                    @foreach (var notification in Model.Notifications)
                    {
                        <div class="notification-item">
                            <div class="notification-content">
                                @if (notification.Message.Contains("followed", StringComparison.OrdinalIgnoreCase))
                                {
                                    <a  class="text-decoration-none"href="@Url.Action("ViewOtherProfiles", "User", new { id = notification.UserId })">
                                        @notification.Message
                                    </a>
                                }
                                else
                                {
                                    <a class="text-decoration-none"href="@Url.Action("ViewPost", "Post", new { id = notification.RelatedId })">
                                        @notification.Message
                                    </a>
                                }
                            </div>
                            <time>@notification.CreatedAt.ToString("MM/dd/yyyy hh:mm tt")</time>
                        </div>
                    }
                }
                else
                {
                    <p>No recent notifications.</p>
                }
            </div>
        </div>
    </div>

    <script>
        // Pie Chart Setup
        const chartCtx = document.getElementById('followerFollowingChart').getContext('2d');
        const followerFollowingChart = new Chart(chartCtx, {
            type: 'pie',
            data: {
                labels: ['Followers', 'Following'],
                datasets: [{
                    data: [@Model.Followers.Count, @Model.Followings.Count],
                    backgroundColor: ['#DCDCDC', '#333'],
                    borderColor: ['#DCDCDC', '#333'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        labels: {
                            color: '#555',
                            font: {
                                size: 14
                            }
                        }
                    }
                }
            }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>